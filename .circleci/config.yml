 version: 2.1

 jobs:
   start:
    docker:
      - image: 'cimg/node:16.11.1'
    steps:
      - run:
           command: |
             curl ${TELEGRAM_WEBHOOK}"/sendMessage?chat_id="${TELEGRAM_GROUPID}"&text=🚘%20Deployment%20test.tabu1992.dev%20start%0A%20🔑%20${CIRCLE_BRANCH}%0A%20👨‍🦱 ${CIRCLE_USERNAME}"
           name: Telegram - Start Deploy
   after_start:
    docker:
      - image: 'cimg/node:16.11.1'
    steps:
      - run:
           command: |
             curl ${TELEGRAM_WEBHOOK}"/sendMessage?chat_id="${TELEGRAM_GROUPID}"&text=🚘%20Deployment%20test.tabu1992.dev%20after%20start%0A%20🔑%20${CIRCLE_BRANCH}%0A%20👨‍🦱 ${CIRCLE_USERNAME}"
           name: Telegram - Start Deploy
   end:
    docker:
      - image: 'cimg/node:16.11.1'
    steps:
      - run:
           command: |
             curl ${TELEGRAM_WEBHOOK}"/sendMessage?chat_id="${TELEGRAM_GROUPID}"&text=✅%20Deploy%20successfully!!!"
           name: Telegram - End Deploy
           no_output_timeout: 10s
   deploy:
     machine:
       enabled: true
     steps:
       - run:
           name: Deploy Over SSH
           command: |
             ssh root@103.130.213.12 "cd /var/www/html/lixi &&
             git checkout -f  &&
             git pull origin master"
           no_output_timeout: 30s
       - run:
           command: |
             curl ${TELEGRAM_WEBHOOK}"/sendMessage?chat_id="${TELEGRAM_GROUPID}"&text=❌%20test.tabu1992.dev%20Deploy%20failed!"
           name: Telegram - Setting Error Condition
           when: on_fail
           no_output_timeout: 10s
 workflows:
   deploy:
     jobs:
       - start
       - after_start
           requires:
             - start
       - deploy:
           filters:
             branches:
               only: master # only deploy master branch
       - end:
           requires:
             - deploy
